diff --git a/deps/libgo2/src/display.c b/deps/libgo2/src/display.c
index b91cf0624b..d7ddd80e05 100644
--- a/deps/libgo2/src/display.c
+++ b/deps/libgo2/src/display.c
@@ -39,7 +39,7 @@ Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 #include <pthread.h>
 #include <semaphore.h>
 
-#include <rga/RgaApi.h>
+#include <RgaApi.h>
 
 #define EGL_EGLEXT_PROTOTYPES
 //#define GL_GLEXT_PROTOTYPES
@@ -50,6 +50,8 @@ Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 
 #include <png.h>
 
+#define BUFFER_COUNT (2)
+#define BUFFER_MAX (2)
 
 typedef struct go2_display
 {
@@ -85,14 +87,6 @@ typedef struct go2_presenter
     go2_display_t* display;
     uint32_t format;
     uint32_t background_color;
-    go2_queue_t* freeFrameBuffers;
-    go2_queue_t* usedFrameBuffers;
-    pthread_mutex_t queueMutex;
-    pthread_t renderThread;
-    sem_t freeSem;
-    sem_t usedSem;
-    volatile bool terminating;
-    bool managed;
 } go2_presenter_t;
 
 
@@ -550,7 +544,7 @@ static uint32_t go2_rkformat_get(uint32_t drm_fourcc)
 
         case DRM_FORMAT_ARGB8888:
         case DRM_FORMAT_XRGB8888:
-            return RK_FORMAT_BGRA_8888;
+            return RK_FORMAT_RGBX_8888;
 
         case DRM_FORMAT_RGB565:
             return RK_FORMAT_RGB_565;
@@ -832,66 +826,8 @@ go2_surface_t* go2_frame_buffer_surface_get(go2_frame_buffer_t* frame_buffer)
 
 
 
-#if 0
-typedef struct go2_presenter
-{
-    go2_display_t* display;
-    uint32_t format;
-    uint32_t background_color;
-    go2_queue_t* freeFrameBuffers;
-    go2_queue_t* usedFrameBuffers;
-    pthread_mutex_t queueMutex;
-    pthread_t renderThread;
-    sem_t freeSem;
-    sem_t usedSem;
-    volatile bool terminating;
-} go2_presenter_t;
-#endif
-
-#define BUFFER_COUNT (3)
-
-static void* go2_presenter_renderloop(void* arg)
-{
-    go2_presenter_t* presenter = (go2_presenter_t*)arg;
-    go2_frame_buffer_t* prevFrameBuffer = NULL;
-
-    presenter->terminating = false;
-    while(!presenter->terminating)
-    {
-        sem_wait(&presenter->usedSem);
-        if(presenter->terminating) break;
-
-
-        pthread_mutex_lock(&presenter->queueMutex);
-
-        if (go2_queue_count_get(presenter->usedFrameBuffers) < 1)
-        {
-            printf("no framebuffer available.\n");
-            abort();
-        }
-
-        go2_frame_buffer_t* dstFrameBuffer = (go2_frame_buffer_t*)go2_queue_pop(presenter->usedFrameBuffers);
-
-        pthread_mutex_unlock(&presenter->queueMutex);
-
-
-        go2_display_present(presenter->display, dstFrameBuffer);
-
-        if (prevFrameBuffer)
-        {
-            pthread_mutex_lock(&presenter->queueMutex);
-            go2_queue_push(presenter->freeFrameBuffers, prevFrameBuffer);
-            pthread_mutex_unlock(&presenter->queueMutex);
-
-            sem_post(&presenter->freeSem);
-        }
-
-        prevFrameBuffer = dstFrameBuffer;
-    }
-
-
-    return NULL;
-}
+ go2_frame_buffer_t* fbufs[BUFFER_COUNT];
+ uint32_t fbufs_i = 0;
 
 go2_display_t* go2_presenter_display_get(go2_presenter_t* presenter)
 {
@@ -913,68 +849,28 @@ go2_presenter_t* go2_presenter_create(go2_display_t* display, uint32_t format, u
     result->display = display;
     result->format = format;
     result->background_color = background_color;
-    result->managed = managed;
-    if (managed) {
-        result->freeFrameBuffers = go2_queue_create(BUFFER_COUNT);
-        result->usedFrameBuffers = go2_queue_create(BUFFER_COUNT);
-
         int width = go2_display_width_get(display);
         int height = go2_display_height_get(display);
 
-        for (int i = 0; i < BUFFER_COUNT; ++i)
-        {
-            go2_surface_t* surface = go2_surface_create(display, width, height, format);
-            go2_frame_buffer_t* frameBuffer = go2_frame_buffer_create(surface);
-
-            go2_queue_push(result->freeFrameBuffers, frameBuffer);
-        }
-
-        sem_init(&result->usedSem, 0, 0);
-        sem_init(&result->freeSem, 0, BUFFER_COUNT);
-
-        pthread_mutex_init(&result->queueMutex, NULL);
-
-        pthread_create(&result->renderThread, NULL, go2_presenter_renderloop, result);
-    }
-    else {
-        result->freeFrameBuffers = go2_queue_create(0);
-        result->usedFrameBuffers = go2_queue_create(0);
-    }
+     for (int i = 0; i < BUFFER_COUNT; ++i)
+     {
+         go2_surface_t* surface = go2_surface_create(display, width, height, format);
+         go2_frame_buffer_t* frameBuffer = go2_frame_buffer_create(surface);
+         fbufs[i] = frameBuffer;
+     }
 
     return result;
 }
 
 void go2_presenter_destroy(go2_presenter_t* presenter)
 {
-    if (presenter->managed) {
-        presenter->terminating = true;
-        sem_post(&presenter->usedSem);
-
-        pthread_join(presenter->renderThread, NULL);
-        pthread_mutex_destroy(&presenter->queueMutex);
-
-        sem_destroy(&presenter->freeSem);
-        sem_destroy(&presenter->usedSem);
-
-        while(go2_queue_count_get(presenter->usedFrameBuffers) > 0)
-        {
-            go2_frame_buffer_t* frameBuffer = go2_queue_pop(presenter->usedFrameBuffers);
-
-            go2_surface_t* surface = frameBuffer->surface;
-
-            go2_frame_buffer_destroy(frameBuffer);
-            go2_surface_destroy(surface);
-        }
-
-        while(go2_queue_count_get(presenter->freeFrameBuffers) > 0)
-        {
-            go2_frame_buffer_t* frameBuffer = go2_queue_pop(presenter->freeFrameBuffers);
-
-            go2_surface_t* surface = frameBuffer->surface;
+    for (int i = 0; i < BUFFER_COUNT; ++i)
+    {
+       go2_frame_buffer_t* frameBuffer = fbufs[i];
+       go2_surface_t* surface = frameBuffer->surface;
 
-            go2_frame_buffer_destroy(frameBuffer);
-            go2_surface_destroy(surface);
-        }
+       go2_frame_buffer_destroy(frameBuffer);
+       go2_surface_destroy(surface);
     }
 
     free(presenter);
@@ -982,21 +878,7 @@ void go2_presenter_destroy(go2_presenter_t* presenter)
 
 void go2_presenter_post(go2_presenter_t* presenter, go2_surface_t* surface, int srcX, int srcY, int srcWidth, int srcHeight, int dstX, int dstY, int dstWidth, int dstHeight, go2_rotation_t rotation, int scale_mode)
 {
-    sem_wait(&presenter->freeSem);
-
-
-    pthread_mutex_lock(&presenter->queueMutex);
-
-    if (go2_queue_count_get(presenter->freeFrameBuffers) < 1)
-    {
-        printf("no framebuffer available.\n");
-        abort();
-    }
-
-    go2_frame_buffer_t* dstFrameBuffer = go2_queue_pop(presenter->freeFrameBuffers);
-
-    pthread_mutex_unlock(&presenter->queueMutex);
-
+    go2_frame_buffer_t* dstFrameBuffer = fbufs[fbufs_i++ % BUFFER_COUNT];
 
     go2_surface_t* dstSurface = go2_frame_buffer_surface_get(dstFrameBuffer);
 
@@ -1012,24 +894,10 @@ void go2_presenter_post(go2_presenter_t* presenter, go2_surface_t* surface, int
     dst.rect.format = go2_rkformat_get(go2_surface_format_get(dstSurface));
     dst.color = presenter->background_color;
 
-    int ret = c_RkRgaColorFill(&dst);
-    if (ret)
-    {
-        printf("c_RkRgaColorFill failed.\n");
-    }
-
-
     go2_surface_blit(surface, srcX, srcY, srcWidth, srcHeight, dstSurface, dstX, dstY, dstWidth, dstHeight, rotation, scale_mode);
-
-
-    pthread_mutex_lock(&presenter->queueMutex);
-    go2_queue_push(presenter->usedFrameBuffers, dstFrameBuffer);
-    pthread_mutex_unlock(&presenter->queueMutex);
-
-    sem_post(&presenter->usedSem);
+    go2_display_present(presenter->display, dstFrameBuffer);
 }
 
-#define BUFFER_MAX (3)
 
 typedef struct buffer_surface_pair
 {
@@ -1211,7 +1079,7 @@ go2_context_t* go2_context_create(go2_display_t* display, int width, int height,
     }
 
 
-    result->eglSurface = eglCreateWindowSurface(result->eglDisplay, eglConfig, (EGLNativeWindowType)result->gbmSurface, NULL);	
+    result->eglSurface = eglCreateWindowSurface(result->eglDisplay, eglConfig, (EGLNativeWindowType)result->gbmSurface, NULL);
     if (result->eglSurface == EGL_NO_SURFACE)
     {
         printf("eglCreateWindowSurface failed\n");
diff --git a/gfx/drivers/oga_gfx.c b/gfx/drivers/oga_gfx.c
index bb71b27159..4559af65fa 100644
--- a/gfx/drivers/oga_gfx.c
+++ b/gfx/drivers/oga_gfx.c
@@ -20,8 +20,8 @@
 #include <stdint.h>
 
 #include <fcntl.h>
-#include <rga/RgaApi.h>
-#include <rga/RockchipRgaMacro.h>
+#include <RgaApi.h>
+#include <drmrga.h>
 #include <xf86drm.h>
 #include <xf86drmMode.h>
 #include <drm/drm_fourcc.h>
diff --git a/gfx/drivers_context/drm_go2_ctx.c b/gfx/drivers_context/drm_go2_ctx.c
index 856aa0f9a2..ec0dd1030e 100644
--- a/gfx/drivers_context/drm_go2_ctx.c
+++ b/gfx/drivers_context/drm_go2_ctx.c
@@ -223,7 +223,7 @@ static bool gfx_ctx_go2_drm_set_video_mode(void *data,
    frontend_driver_install_signal_handler();
 
 #ifdef HAVE_MENU
-   if (      config_get_ptr()->bools.video_ctx_scaling 
+   if (      config_get_ptr()->bools.video_ctx_scaling
          && !(menu_state_get_ptr()->flags & MENU_ST_FLAG_ALIVE))
    {
        drm->fb_width    = av_info->geometry.base_width;
@@ -278,13 +278,13 @@ static void gfx_ctx_go2_drm_check_window(void *data, bool *quit,
       bool *resize, unsigned *width, unsigned *height)
 {
    unsigned w, h;
-   gfx_ctx_go2_drm_data_t 
+   gfx_ctx_go2_drm_data_t
       *drm              = (gfx_ctx_go2_drm_data_t*)data;
 #ifdef HAVE_MENU
    settings_t *settings = config_get_ptr();
    bool use_ctx_scaling = settings->bools.video_ctx_scaling;
 
-   if (      use_ctx_scaling 
+   if (      use_ctx_scaling
          && !(menu_state_get_ptr()->flags & MENU_ST_FLAG_ALIVE))
    {
       video_driver_state_t *video_st       = video_state_get_ptr();
@@ -314,10 +314,10 @@ static bool gfx_ctx_go2_drm_suppress_screensaver(void *data, bool enable) { retu
 static void gfx_ctx_go2_drm_swap_buffers(void *data)
 {
 #ifdef HAVE_EGL
-   go2_surface_t* 
+   go2_surface_t*
       surf   = NULL;
 #endif
-   gfx_ctx_go2_drm_data_t 
+   gfx_ctx_go2_drm_data_t
       *drm   = (gfx_ctx_go2_drm_data_t*)data;
 
    int out_w = drm->native_width;
@@ -346,7 +346,7 @@ static void gfx_ctx_go2_drm_swap_buffers(void *data)
          surf,
          src_x, src_y, src_w, src_h,
          out_y, out_x, out_h, out_w,
-         GO2_ROTATION_DEGREES_270, 2);
+         GO2_ROTATION_DEGREES_90, 2);
    go2_context_surface_unlock(drm->context, surf);
 #endif
 }
diff --git a/menu/drivers/ozone.c b/menu/drivers/ozone.c
index 6abb251ab0..a28dfd2721 100644
--- a/menu/drivers/ozone.c
+++ b/menu/drivers/ozone.c
@@ -80,7 +80,7 @@
 #define HEADER_HEIGHT                 87
 #define FOOTER_HEIGHT                 78
 
-#define ENTRY_PADDING_HORIZONTAL_HALF 40
+#define ENTRY_PADDING_HORIZONTAL_HALF 4
 #define ENTRY_PADDING_HORIZONTAL_FULL 140
 #define ENTRY_PADDING_VERTICAL        20
 #define ENTRY_HEIGHT                  50
@@ -91,15 +91,17 @@
 /* > 'SIDEBAR_WIDTH' must be kept in sync with
  *   menu driver metrics */
 #define SIDEBAR_WIDTH                 408
-#define SIDEBAR_X_PADDING             40
+#define SIDEBAR_X_PADDING             4
 #define SIDEBAR_Y_PADDING             20
 #define SIDEBAR_ENTRY_HEIGHT          50
 #define SIDEBAR_ENTRY_Y_PADDING       10
 #define SIDEBAR_ENTRY_ICON_SIZE       46
-#define SIDEBAR_ENTRY_ICON_PADDING    15
+#define SIDEBAR_ENTRY_ICON_PADDING    4
 #define SIDEBAR_GRADIENT_HEIGHT       28
 
-#define FULLSCREEN_THUMBNAIL_PADDING  32
+#define FULLSCREEN_THUMBNAIL_PADDING  4
+
+#define SCALE_FACTOR                  1.5f;
 
 #define CURSOR_SIZE                   64
 /* Cursor becomes active when it moves more
@@ -8607,7 +8609,7 @@ static void *ozone_init(void **userdata, bool video_is_threaded)
    ozone->last_width                            = width;
    ozone->last_height                           = height;
    ozone->last_scale_factor                     = gfx_display_get_dpi_scale(p_disp,
-         settings, width, height, false, false);
+         settings, width, height, false, false) * SCALE_FACTOR;
    ozone->last_thumbnail_scale_factor           = settings->floats.ozone_thumbnail_scale_factor;
 
    ozone->selection_buf_old.list                = NULL;
@@ -9037,10 +9039,10 @@ static void ozone_set_layout(
 
    /* Calculate dimensions */
    ozone->dimensions.header_height                  = HEADER_HEIGHT * scale_factor;
-   ozone->dimensions.footer_height                  = FOOTER_HEIGHT * scale_factor;
+   ozone->dimensions.footer_height                  = FOOTER_HEIGHT * scale_factor / SCALE_FACTOR;
 
-   ozone->dimensions.entry_padding_horizontal_half  = ENTRY_PADDING_HORIZONTAL_HALF * scale_factor;
-   ozone->dimensions.entry_padding_horizontal_full  = ENTRY_PADDING_HORIZONTAL_FULL * scale_factor;
+   ozone->dimensions.entry_padding_horizontal_half  = ENTRY_PADDING_HORIZONTAL_HALF * scale_factor / SCALE_FACTOR;
+   ozone->dimensions.entry_padding_horizontal_full  = ENTRY_PADDING_HORIZONTAL_FULL * scale_factor / SCALE_FACTOR;
    ozone->dimensions.entry_padding_vertical         = ENTRY_PADDING_VERTICAL * scale_factor;
    ozone->dimensions.entry_height                   = ENTRY_HEIGHT * scale_factor;
    ozone->dimensions.entry_spacing                  = ENTRY_SPACING * scale_factor;
@@ -9747,7 +9749,7 @@ static void ozone_render(void *data,
    /* Check whether screen dimensions or menu scale
     * factor have changed */
    scale_factor           = gfx_display_get_dpi_scale(p_disp, settings,
-         width, height, false, false);
+         width, height, false, false) * SCALE_FACTOR;
    thumbnail_scale_factor = settings->floats.ozone_thumbnail_scale_factor;
 
    if (     (scale_factor != ozone->last_scale_factor)
diff --git a/retroarch.c b/retroarch.c
index b9e9aa5f30..03bdb617fe 100644
--- a/retroarch.c
+++ b/retroarch.c
@@ -4349,7 +4349,7 @@ bool command_event(enum event_command cmd, void *data)
          system("(sleep 1 && shutdown -P now) & disown");
 #else
          command_event(CMD_EVENT_QUIT, NULL);
-         system("shutdown -P now");
+         system("poweroff");
 #endif /* HAVE_LAKKA */
 #endif
          break;
@@ -4364,7 +4364,7 @@ bool command_event(enum event_command cmd, void *data)
          system("(sleep 1 && shutdown -r now) & disown");
 #else
          command_event(CMD_EVENT_QUIT, NULL);
-         system("shutdown -r now");
+         system("reboot");
 #endif /* HAVE_LAKKA */
 #endif
          break;
