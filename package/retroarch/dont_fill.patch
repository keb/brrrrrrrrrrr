commit 8181efdfd7916e2b1d7f4b8685ce4bd89acc4a47
Author: brrrrrrrrrr <brrrrrrrrrr@brrrrrrrrrr>
Date:   Fri Jan 26 00:26:56 2024 -0500

    Don't Fill background

diff --git a/deps/libgo2/src/display.c b/deps/libgo2/src/display.c
index 1b8246d585..bb9837617c 100644
--- a/deps/libgo2/src/display.c
+++ b/deps/libgo2/src/display.c
@@ -50,6 +50,8 @@ Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 
 #include <png.h>
 
+#define BUFFER_COUNT (2)
+#define BUFFER_MAX (1)
 
 typedef struct go2_display
 {
@@ -85,14 +87,6 @@ typedef struct go2_presenter
     go2_display_t* display;
     uint32_t format;
     uint32_t background_color;
-    go2_queue_t* freeFrameBuffers;
-    go2_queue_t* usedFrameBuffers;
-    pthread_mutex_t queueMutex;
-    pthread_t renderThread;
-    sem_t freeSem;
-    sem_t usedSem;
-    volatile bool terminating;
-    bool managed;
 } go2_presenter_t;
 
 
@@ -832,66 +826,8 @@ go2_surface_t* go2_frame_buffer_surface_get(go2_frame_buffer_t* frame_buffer)
 
 
 
-#if 0
-typedef struct go2_presenter
-{
-    go2_display_t* display;
-    uint32_t format;
-    uint32_t background_color;
-    go2_queue_t* freeFrameBuffers;
-    go2_queue_t* usedFrameBuffers;
-    pthread_mutex_t queueMutex;
-    pthread_t renderThread;
-    sem_t freeSem;
-    sem_t usedSem;
-    volatile bool terminating;
-} go2_presenter_t;
-#endif
-
-#define BUFFER_COUNT (3)
-
-static void* go2_presenter_renderloop(void* arg)
-{
-    go2_presenter_t* presenter = (go2_presenter_t*)arg;
-    go2_frame_buffer_t* prevFrameBuffer = NULL;
-
-    presenter->terminating = false;
-    while(!presenter->terminating)
-    {
-        sem_wait(&presenter->usedSem);
-        if(presenter->terminating) break;
-
-
-        pthread_mutex_lock(&presenter->queueMutex);
-
-        if (go2_queue_count_get(presenter->usedFrameBuffers) < 1)
-        {
-            printf("no framebuffer available.\n");
-            abort();
-        }
-
-        go2_frame_buffer_t* dstFrameBuffer = (go2_frame_buffer_t*)go2_queue_pop(presenter->usedFrameBuffers);
-
-        pthread_mutex_unlock(&presenter->queueMutex);
-
-
-        go2_display_present(presenter->display, dstFrameBuffer);
-
-        if (prevFrameBuffer)
-        {
-            pthread_mutex_lock(&presenter->queueMutex);
-            go2_queue_push(presenter->freeFrameBuffers, prevFrameBuffer);
-            pthread_mutex_unlock(&presenter->queueMutex);
-
-            sem_post(&presenter->freeSem);
-        }
-
-        prevFrameBuffer = dstFrameBuffer;
-    }
-
-
-    return NULL;
-}
+ go2_frame_buffer_t* fbufs[BUFFER_COUNT];
+ uint32_t fbufs_i = 0;
 
 go2_display_t* go2_presenter_display_get(go2_presenter_t* presenter)
 {
@@ -913,68 +849,28 @@ go2_presenter_t* go2_presenter_create(go2_display_t* display, uint32_t format, u
     result->display = display;
     result->format = format;
     result->background_color = background_color;
-    result->managed = managed;
-    if (managed) {
-        result->freeFrameBuffers = go2_queue_create(BUFFER_COUNT);
-        result->usedFrameBuffers = go2_queue_create(BUFFER_COUNT);
-
         int width = go2_display_width_get(display);
         int height = go2_display_height_get(display);
 
-        for (int i = 0; i < BUFFER_COUNT; ++i)
-        {
-            go2_surface_t* surface = go2_surface_create(display, width, height, format);
-            go2_frame_buffer_t* frameBuffer = go2_frame_buffer_create(surface);
-
-            go2_queue_push(result->freeFrameBuffers, frameBuffer);
-        }
-
-        sem_init(&result->usedSem, 0, 0);
-        sem_init(&result->freeSem, 0, BUFFER_COUNT);
-
-        pthread_mutex_init(&result->queueMutex, NULL);
-
-        pthread_create(&result->renderThread, NULL, go2_presenter_renderloop, result);
-    }
-    else {
-        result->freeFrameBuffers = go2_queue_create(0);
-        result->usedFrameBuffers = go2_queue_create(0);
-    }
+     for (int i = 0; i < BUFFER_COUNT; ++i)
+     {
+         go2_surface_t* surface = go2_surface_create(display, width, height, format);
+         go2_frame_buffer_t* frameBuffer = go2_frame_buffer_create(surface);
+         fbufs[i] = frameBuffer;
+     }
 
     return result;
 }
 
 void go2_presenter_destroy(go2_presenter_t* presenter)
 {
-    if (presenter->managed) {
-        presenter->terminating = true;
-        sem_post(&presenter->usedSem);
-
-        pthread_join(presenter->renderThread, NULL);
-        pthread_mutex_destroy(&presenter->queueMutex);
-
-        sem_destroy(&presenter->freeSem);
-        sem_destroy(&presenter->usedSem);
-
-        while(go2_queue_count_get(presenter->usedFrameBuffers) > 0)
-        {
-            go2_frame_buffer_t* frameBuffer = go2_queue_pop(presenter->usedFrameBuffers);
-
-            go2_surface_t* surface = frameBuffer->surface;
-
-            go2_frame_buffer_destroy(frameBuffer);
-            go2_surface_destroy(surface);
-        }
-
-        while(go2_queue_count_get(presenter->freeFrameBuffers) > 0)
-        {
-            go2_frame_buffer_t* frameBuffer = go2_queue_pop(presenter->freeFrameBuffers);
-
-            go2_surface_t* surface = frameBuffer->surface;
+    for (int i = 0; i < BUFFER_COUNT; ++i)
+    {
+       go2_frame_buffer_t* frameBuffer = fbufs[i];
+       go2_surface_t* surface = frameBuffer->surface;
 
-            go2_frame_buffer_destroy(frameBuffer);
-            go2_surface_destroy(surface);
-        }
+       go2_frame_buffer_destroy(frameBuffer);
+       go2_surface_destroy(surface);
     }
 
     free(presenter);
@@ -982,21 +878,7 @@ void go2_presenter_destroy(go2_presenter_t* presenter)
 
 void go2_presenter_post(go2_presenter_t* presenter, go2_surface_t* surface, int srcX, int srcY, int srcWidth, int srcHeight, int dstX, int dstY, int dstWidth, int dstHeight, go2_rotation_t rotation, int scale_mode)
 {
-    sem_wait(&presenter->freeSem);
-
-
-    pthread_mutex_lock(&presenter->queueMutex);
-
-    if (go2_queue_count_get(presenter->freeFrameBuffers) < 1)
-    {
-        printf("no framebuffer available.\n");
-        abort();
-    }
-
-    go2_frame_buffer_t* dstFrameBuffer = go2_queue_pop(presenter->freeFrameBuffers);
-
-    pthread_mutex_unlock(&presenter->queueMutex);
-
+    go2_frame_buffer_t* dstFrameBuffer = fbufs[fbufs_i++ % BUFFER_COUNT];
 
     go2_surface_t* dstSurface = go2_frame_buffer_surface_get(dstFrameBuffer);
 
@@ -1012,24 +894,10 @@ void go2_presenter_post(go2_presenter_t* presenter, go2_surface_t* surface, int
     dst.rect.format = go2_rkformat_get(go2_surface_format_get(dstSurface));
     dst.color = presenter->background_color;
 
-    int ret = c_RkRgaColorFill(&dst);
-    if (ret)
-    {
-        printf("c_RkRgaColorFill failed.\n");
-    }
-
-
     go2_surface_blit(surface, srcX, srcY, srcWidth, srcHeight, dstSurface, dstX, dstY, dstWidth, dstHeight, rotation, scale_mode);
-
-
-    pthread_mutex_lock(&presenter->queueMutex);
-    go2_queue_push(presenter->usedFrameBuffers, dstFrameBuffer);
-    pthread_mutex_unlock(&presenter->queueMutex);
-
-    sem_post(&presenter->usedSem);
+    go2_display_present(presenter->display, dstFrameBuffer);
 }
 
-#define BUFFER_MAX (3)
 
 typedef struct buffer_surface_pair
 {
